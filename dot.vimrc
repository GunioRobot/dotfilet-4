" ----------------------------------------------------------------------
" ファイル形式
" ----------------------------------------------------------------------
filetype on        " ファイル形式の検出をする
filetype indent on " ファイル形式別のインデントをする
filetype plugin on " プラグインを有効にする

" ----------------------------------------------------------------------
" 文字コード
" ----------------------------------------------------------------------
set encoding=utf-8                      " デフォルトの文字コード
set fileencodings=utf-8,eucjp,iso2022jp " 自動判別用の文字コード

" ----------------------------------------------------------------------
" プラグイン
" ----------------------------------------------------------------------
" RSense
let g:rsenseHome="/opt/rsense-0.3/" " RSense をインストールしたディレクトリ

" matchit
let b:match_words="<begin>:<end>"

" ----------------------------------------------------------------------
" 空白文字の扱い
" ----------------------------------------------------------------------
set tabstop=2    " タブ幅
set shiftwidth=2 " シフトで移動する幅
set expandtab    " タブの代わりに半角スペースを入れる

" ----------------------------------------------------------------------
" ステータス
" ----------------------------------------------------------------------
set laststatus=2 " 常にステータスラインを表示
set showcmd      " 入力中のコマンドをステータスに表示

" ステータスラインに文字コードと改行文字を表示
set statusline=%<%f\ %m%r%h%w%{'['.(&fenc!=''?&fenc:&enc).']['.&ff.']'}%=%l,%c%V%8P

" ----------------------------------------------------------------------
" 検索
" ----------------------------------------------------------------------
set incsearch                  " インクリメンタル検索する
set ignorecase                 " 検索時に大文字と小文字を区別しない
map fd :RSenseJumpToDefinition " 定義元に飛ぶ（Find Definition）

" プロジェクト内検索（Find Project）
map fp :!grep -r --exclude-dir=log --exclude-dir=tmp --color=auto 

" ----------------------------------------------------------------------
" ジャンプ・移動
" ----------------------------------------------------------------------
map bf :e # " 前開いていたファイルに戻る（Back to File）
map bc `'   " ジャンプ前のカーソルに戻る（Back to Cursor）

" ----------------------------------------------------------------------
" ハイライト
" ----------------------------------------------------------------------
syntax on    " シンタックスハイライトを有効にする
set hlsearch " 検索結果の文字列をハイライトする

" 全角スペースをハイライトする
highlight ZenkakuSpace ctermbg=white
match ZenkakuSpace /　/

" ----------------------------------------------------------------------
" その他
" ----------------------------------------------------------------------
set nocompatible " Vim の拡張機能を使う
set nu           " 行番号を表示
set showmatch    " 対応する括弧を表示
set hid          " 編集中の内容を保持して別の画面に切り替える
set scroll=1     " ^u, ^d でスクロールする行数
set noswapfile   " スワップファイルは作らない

" （※注意 ^[ は ^V [ と入力）
map co 0i#j    " # でコメントアウトして次の行に移動（Comment Out）
map hco 0i-#j   " -# でコメントアウトして次の行に移動（Haml Comment out）

set ambiwidth=double
